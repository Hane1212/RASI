services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"

  airflow-init:
    image: apache/airflow:latest
    container_name: airflow-init
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    command: airflow db init

  airflow-webserver:
    build:
      context: .  # Use the current directory
      dockerfile: Dockerfile
    container_name: airflow-webserver
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=mysecret
      - PYTHONPATH=/opt/airflow
    volumes:
      - ./create_admin_user.sh:/create_admin_user.sh  # Mount the script
      # - /Users/hane/Kiwi/Epita/S2/DSP/projet/RASI:/opt/airflow/dags
      - ./dags:/opt/airflow/dags 
      - ./data:/opt/airflow/data
    entrypoint: ["/bin/bash", "-c", "airflow db migrate && airflow webserver & /create_admin_user.sh && wait"]
    command: airflow webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile 
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=mysecret
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - PYTHONPATH=/opt/airflow
    volumes:
      # - /Users/hane/Kiwi/Epita/S2/DSP/projet/RASI:/opt/airflow/dags  # Ensure DAGs folder is mounted
      - ./dags:/opt/airflow/dags 
      - ./data:/opt/airflow/data
    command: airflow scheduler

# services:
#   postgres:
#     image: postgres:13
#     container_name: postgres
#     environment:
#       POSTGRES_USER: airflow
#       POSTGRES_PASSWORD: airflow
#       POSTGRES_DB: airflow
#     ports:
#       - "5432:5432"

#   airflow-init:
#     image: apache/airflow:latest
#     container_name: airflow-init
#     depends_on:
#       - postgres
#     environment:
#       - AIRFLOW__CORE__EXECUTOR=LocalExecutor
#       - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
#     command: airflow db init

#   airflow-webserver:
#     image: apache/airflow:latest
#     container_name: airflow-webserver
#     depends_on:
#       - airflow-init
#     ports:
#       - "8080:8080"
#     environment:
#       - AIRFLOW__CORE__EXECUTOR=LocalExecutor
#       - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
#       - AIRFLOW__WEBSERVER__SECRET_KEY=mysecret
#     volumes:
#       - ./create_admin_user.sh:/create_admin_user.sh  
#       - ./dags:/opt/airflow/dags 
#       - ./data:/opt/airflow/data
#       - ./requirements.txt:/requirements.txt  # Mount the requirements.txt file
#     entrypoint: ["/bin/bash", "-c", "pip install --no-cache-dir -r /requirements.txt && airflow db migrate && airflow webserver & /create_admin_user.sh && wait"]
#     command: airflow webserver

#   airflow-scheduler:
#     image: apache/airflow:latest
#     container_name: airflow-scheduler
#     depends_on:
#       - airflow-webserver
#     environment:
#       - AIRFLOW__CORE__EXECUTOR=LocalExecutor
#       - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
#       - AIRFLOW__WEBSERVER__SECRET_KEY=mysecret
#       - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
#     volumes:
#       - ./dags:/opt/airflow/dags  
#       - ./data:/opt/airflow/data
#       - ./requirements.txt:/requirements.txt  # Mount the requirements.txt file
#     entrypoint: ["/bin/bash", "-c", "pip install --no-cache-dir -r /requirements.txt && airflow scheduler"]
#     command: airflow scheduler
